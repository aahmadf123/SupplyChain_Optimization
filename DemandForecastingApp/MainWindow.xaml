<Window x:Class="DemandForecastingApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DemandForecastingApp"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        xmlns:ui="clr-namespace:DemandForecastingApp.UI"
        mc:Ignorable="d"
        Title="Demand Forecasting and Inventory Optimization"
        Height="700" Width="1000"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <!-- Dark Theme Colors -->
        <SolidColorBrush x:Key="BackgroundBrush" Color="#1E1E2F"/>
        <SolidColorBrush x:Key="PanelBrush" Color="#2D2D3B"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#8BC34A"/>
        <SolidColorBrush x:Key="TextBrush" Color="White"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#3F3F5F"/>
        
        <!-- Button Style -->
        <Style x:Key="FuturisticButton" TargetType="Button">
            <Setter Property="Background" Value="#673AB7"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7E57C2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Accent Button Style -->
        <Style x:Key="AccentButton" TargetType="Button" BasedOn="{StaticResource FuturisticButton}">
            <Setter Property="Background" Value="#8BC34A"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9CCC65"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="{StaticResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- TOP CONFIGURATION AREA -->
        <Border Grid.Row="0" Background="{StaticResource PanelBrush}" Margin="10" CornerRadius="5">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <TextBlock Text="Configuration" Foreground="{StaticResource TextBrush}" 
                           FontSize="16" FontWeight="Medium" Margin="5,0,0,10"/>
                
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Button Style="{StaticResource FuturisticButton}" Margin="5,0" 
                            Command="{Binding LoadDataCommand}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Load Data" Margin="5"/>
                        </StackPanel>
                    </Button>
                    
                    <TextBlock Text="Lead Time:" Foreground="{StaticResource TextBrush}" 
                               VerticalAlignment="Center" Margin="15,0,5,0"/>
                    <TextBox Text="{Binding LeadTime, UpdateSourceTrigger=PropertyChanged}" Width="60" Margin="0,0,10,0"/>
                    
                    <TextBlock Text="Reorder Threshold:" Foreground="{StaticResource TextBrush}" 
                               VerticalAlignment="Center" Margin="10,0,5,0"/>
                    <TextBox Text="{Binding ReorderThreshold, UpdateSourceTrigger=PropertyChanged}" Width="60" Margin="0,0,10,0"/>
                    
                    <Button Style="{StaticResource AccentButton}" Margin="10,0,5,0" 
                            Command="{Binding RunForecastCommand}">
                        <TextBlock Text="Run Forecast" Margin="5"/>
                    </Button>
                    
                    <ComboBox Width="120" Margin="15,0,0,0" SelectedIndex="0" 
                              SelectedItem="{Binding SelectedModelType}">
                        <ComboBoxItem Content="SSA (Default)"/>
                        <ComboBoxItem Content="LSTM (Deep Learning)"/>
                    </ComboBox>
                </StackPanel>
            </Grid>
        </Border>

        <!-- CHART DISPLAY AREA -->
        <Border Grid.Row="1" Background="{StaticResource PanelBrush}" Margin="10" CornerRadius="5">
            <!-- Update to use LiveChartsCore -->
            <lvc:CartesianChart Series="{Binding ChartSeries}" 
                                XAxes="{Binding ChartXAxes}"
                                YAxes="{Binding ChartYAxes}"
                                Margin="10"/>
        </Border>

        <!-- GRID SPLITTER -->
        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                      Height="5" Background="#3F3F5F" ShowsPreview="True"/>

        <!-- TAB CONTROL -->
        <TabControl Grid.Row="3" Background="{StaticResource PanelBrush}" Margin="10" 
                    BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Padding" Value="10,5"/>
                </Style>
            </TabControl.Resources>
            
            <TabItem Header="Forecast Details">
                <DataGrid ItemsSource="{Binding ForecastPoints}" AutoGenerateColumns="False" IsReadOnly="True" 
                          Background="{StaticResource PanelBrush}" Foreground="{StaticResource TextBrush}"
                          GridLinesVisibility="All" HeadersVisibility="All">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Binding="{Binding Period}" Width="80"/>
                        <DataGridTextColumn Header="Forecast" Binding="{Binding ForecastedDemand, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Lower Bound" Binding="{Binding LowerBound, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Upper Bound" Binding="{Binding UpperBound, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Reorder Point" Binding="{Binding ReorderPoint}" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Header="Inventory Recommendations">
                <DataGrid ItemsSource="{Binding InventoryRecommendations}" AutoGenerateColumns="False" IsReadOnly="True" 
                          Background="{StaticResource PanelBrush}" Foreground="{StaticResource TextBrush}"
                          GridLinesVisibility="All" HeadersVisibility="All">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Store" Binding="{Binding Item}" Width="80"/>
                        <DataGridTextColumn Header="Current Stock" Binding="{Binding CurrentStock}" Width="100"/>
                        <DataGridTextColumn Header="Recommended Order" Binding="{Binding RecommendedOrder}" Width="130"/>
                        <DataGridTextColumn Header="Lead Time Demand" Binding="{Binding LeadTimeDemand, StringFormat=F2}" Width="130"/>
                        <DataGridTextColumn Header="Safety Stock" Binding="{Binding SafetyStock, StringFormat=F2}" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Header="Market Analysis">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Text="Economic Indicators" Foreground="{StaticResource TextBrush}" 
                               FontWeight="Medium" Margin="10,5"/>
                    
                    <ListView Grid.Row="1" ItemsSource="{Binding MarketData}" Background="{StaticResource PanelBrush}"
                              Foreground="{StaticResource TextBrush}" BorderBrush="{StaticResource BorderBrush}"
                              BorderThickness="1" Margin="10,0,10,10">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Indicator" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Key}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Change" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Change}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Impact" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Impact}" Foreground="{StaticResource TextBrush}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Impact}" Value="Positive">
                                                                <Setter Property="Foreground" Value="#4CAF50"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Impact}" Value="Negative">
                                                                <Setter Property="Foreground" Value="#F44336"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="Sector Performance" Foreground="{StaticResource TextBrush}" 
                                   FontWeight="Medium" Margin="10,5"/>
                        
                        <Button Grid.Column="1" Content="Refresh Data" 
                                Command="{Binding FetchMarketDataCommand}" 
                                Style="{StaticResource FuturisticButton}" 
                                Margin="5"/>
                    </Grid>
                    
                    <ListView Grid.Row="3" ItemsSource="{Binding SectorPerformance}" Background="{StaticResource PanelBrush}"
                              Foreground="{StaticResource TextBrush}" BorderBrush="{StaticResource BorderBrush}"
                              BorderThickness="1" Margin="10,0,10,10">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Sector" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Symbol}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Performance" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Change}" Foreground="{StaticResource TextBrush}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Change}" Value="Positive">
                                                                <Setter Property="Foreground" Value="#4CAF50"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Change}" Value="Negative">
                                                                <Setter Property="Foreground" Value="#F44336"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
            
            <TabItem Header="Settings">
                <ui:SettingsControl/>
            </TabItem>
        </TabControl>

        <!-- STATUS BAR -->
        <Border Grid.Row="4" Background="{StaticResource PanelBrush}" BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,1,0,0" Padding="10,5">
            <TextBlock Text="{Binding StatusMessage}" Foreground="{StaticResource TextBrush}"/>
        </Border>
    </Grid>
</Window>
