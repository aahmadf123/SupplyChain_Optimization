<Window x:Class="DemandForecastingApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DemandForecastingApp"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:ui="clr-namespace:DemandForecastingApp.UI"
        mc:Ignorable="d"
        Title="Demand Forecasting & Inventory Optimization"
        Height="700"
        Width="1000"
        WindowStartupLocation="CenterScreen"
        FontFamily="Segoe UI">

    <!-- MaterialDesign Resource Dictionaries for a futuristic look -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Use Dark Theme for a modern, futuristic appearance -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <!-- Recommended Colors for Primary and Accent -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!-- Additional futuristic style settings -->
            <SolidColorBrush x:Key="FuturisticBackground" Color="#1E1E2F" />
            <SolidColorBrush x:Key="PanelBackground" Color="#2D2D3B" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="{StaticResource FuturisticBackground}">
        <Grid.RowDefinitions>
            <!-- Row 0: Configuration Panel -->
            <RowDefinition Height="Auto"/>
            <!-- Row 1: Chart Display Area -->
            <RowDefinition Height="2*"/>
            <!-- Row 2: GridSplitter -->
            <RowDefinition Height="5"/>
            <!-- Row 3: TabControl (Forecast Details, Inventory, Settings) -->
            <RowDefinition Height="*"/>
            <!-- Row 4: Status Bar -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- TOP CONFIGURATION AREA -->
        <GroupBox Grid.Row="0"
                  Header="Configuration"
                  Margin="10"
                  Background="{StaticResource PanelBackground}"
                  BorderBrush="Transparent"
                  FontSize="14">
            <DockPanel Margin="10">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <!-- Load Data Button with Icon (ensure Assets/Load.png exists) -->
                    <Button Click="LoadData_Click" Style="{StaticResource MaterialDesignRaisedButton}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="Assets/Load.png" Width="20" Height="20" Margin="0,0,5,0"/>
                            <TextBlock Text="Load Data" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <Label Content="Lead Time:" Foreground="White" VerticalAlignment="Center"/>
                    <TextBox Name="LeadTimeTextBox" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Width="120"/>
                    
                    <Label Content="Reorder Threshold:" Foreground="White" VerticalAlignment="Center"/>
                    <TextBox Name="ReorderThresholdTextBox" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Width="120"/>
                    
                    <!-- Run Forecast Button with Icon (ensure Assets/Forecast.png exists) -->
                    <Button Click="RunForecast_Click" Style="{StaticResource MaterialDesignRaisedButton}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="Assets/Forecast.png" Width="20" Height="20" Margin="0,0,5,0"/>
                            <TextBlock Text="Run Forecast" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </DockPanel>
        </GroupBox>

        <!-- CHART DISPLAY AREA -->
        <Border Grid.Row="1"
                Margin="10"
                Background="{StaticResource PanelBackground}"
                BorderBrush="Transparent"
                CornerRadius="4">
            <Grid>
                <lvc:CartesianChart Name="ForecastChart"/>
            </Grid>
        </Border>

        <!-- GRID SPLITTER FOR RESPONSIVE DESIGN -->
        <GridSplitter Grid.Row="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Height="5"
                      Background="Gray"
                      ShowsPreview="True"/>

        <!-- TAB CONTROL FOR EXTRA UI COMPONENTS -->
        <TabControl Grid.Row="3"
                    Background="{StaticResource PanelBackground}"
                    Foreground="White">
            <TabItem Header="Forecast Details">
                <ui:ForecastDetailsControl/>
            </TabItem>
            <TabItem Header="Inventory Recommendations">
                <ui:InventoryRecommendationsControl/>
            </TabItem>
            <TabItem Header="Settings">
                <ui:SettingsControl/>
            </TabItem>
        </TabControl>

        <!-- STATUS BAR AT THE BOTTOM -->
        <StatusBar Grid.Row="4"
                   Background="{StaticResource PanelBackground}"
                   Foreground="White">
            <TextBlock Text="Ready" VerticalAlignment="Center"/>
        </StatusBar>
    </Grid>

    <!-- 
    Additional Suggestions Integrated:
      - MaterialDesignInXAML is used to give the app a modern, futuristic feel.
      - The layout includes a GridSplitter for responsive design and side-by-side views.
      - Consider adopting the MVVM pattern with data binding and commands for better maintainability.
      - For further customization, explore MaterialDesign styles and converters to create animations and transitions.
    -->
</Window>
