<Window x:Class="DemandForecastingApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DemandForecastingApp"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        xmlns:ui="clr-namespace:DemandForecastingApp.UI"
        mc:Ignorable="d"
        Title="Demand Forecasting and Inventory Optimization"
        Height="700" Width="1000"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <!-- Dark Theme Colors -->
        <SolidColorBrush x:Key="BackgroundBrush" Color="#1E1E2F"/>
        <SolidColorBrush x:Key="PanelBrush" Color="#2D2D3B"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#8BC34A"/>
        <SolidColorBrush x:Key="TextBrush" Color="White"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#3F3F5F"/>
        
        <!-- Button Styles -->
        <Style x:Key="FuturisticButton" TargetType="Button">
            <Setter Property="Background" Value="#6A5ACD"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7B68EE"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#483D8B"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="AccentButton" TargetType="Button">
            <Setter Property="Background" Value="#8BC34A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#9CCC65"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#7CB342"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="{StaticResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- TOP CONFIGURATION AREA -->
        <Border Grid.Row="0" Background="{StaticResource PanelBrush}" Margin="10" CornerRadius="5">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Configuration" Foreground="{StaticResource TextBrush}" 
                           FontSize="16" FontWeight="Medium" Margin="5,0,0,10"/>
                
                <Button Grid.Column="1" Content="Help" x:Name="HelpButton"
                        Style="{StaticResource FuturisticButton}" 
                        Background="#2196F3" Padding="15,5" Margin="5,0"
                        Click="HelpButton_Click"/>
                
                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <Button Content="Load Data" Click="LoadDataButton_Click" 
                            Background="#6A5ACD" Foreground="White" 
                            FontWeight="Bold" Padding="10,5" Margin="5,0" 
                            ToolTip="Load historical sales data for forecasting"/>
                    
                    <Label Content="Lead Time:" 
                           Foreground="White" FontWeight="Bold" Margin="5,0" 
                           ToolTip="Number of days it takes to receive inventory after ordering"/>
                    <TextBox x:Name="LeadTimeTextBox" Text="{Binding LeadTime}"
                             Background="White" Foreground="Black" 
                             FontWeight="Bold" Margin="5,0" Width="40"/>
                    
                    <Label Content="Reorder Threshold:" 
                           Foreground="White" FontWeight="Bold" Margin="5,0" 
                           ToolTip="Minimum inventory level that triggers a reorder"/>
                    <TextBox x:Name="ReorderThresholdTextBox" Text="{Binding ReorderThreshold}"
                             Background="White" Foreground="Black" 
                             FontWeight="Bold" Margin="5,0" Width="40"/>
                    
                    <Button Style="{StaticResource AccentButton}" Margin="10,0,5,0" 
                            Command="{Binding RunForecastCommand}"
                            ToolTip="Generate demand forecast and inventory recommendations">
                        <TextBlock Text="Run Forecast" Margin="5"/>
                    </Button>
                    
                    <ComboBox Width="150" Margin="15,0,0,0" SelectedIndex="0" 
                              SelectedItem="{Binding SelectedModelType}"
                              ToolTip="Select forecasting algorithm">
                        <ComboBoxItem Content="SSA (Default)"/>
                        <ComboBoxItem Content="LSTM (Deep Learning)"/>
                    </ComboBox>
                </StackPanel>
                
                <!-- Status Message -->
                <TextBlock Grid.Row="2" Grid.ColumnSpan="2" 
                           Text="{Binding StatusMessage}" 
                           Foreground="{StaticResource AccentBrush}"
                           FontStyle="Italic" Margin="5,5,0,0"/>
            </Grid>
        </Border>

        <!-- CHART DISPLAY AREA -->
        <Border Grid.Row="1" Background="{StaticResource PanelBrush}" Margin="10" CornerRadius="5">
            <lvc:CartesianChart Series="{Binding ChartSeries}" 
                               XAxes="{Binding ChartXAxes}"
                               YAxes="{Binding ChartYAxes}"
                               Margin="10"/>
        </Border>

        <!-- GRID SPLITTER -->
        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                      Height="5" Background="#3F3F5F" ShowsPreview="True"/>

        <!-- TAB CONTROL -->
        <TabControl Grid.Row="3" Background="#3A3A3A" Foreground="White" FontWeight="Bold" Margin="10" 
                    BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
            <TabItem Header="Welcome" Background="#3A3A3A" Foreground="White">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Background="{StaticResource PanelBrush}" Margin="10">
                        <TextBlock Text="Supply Chain Optimization System" 
                                   FontSize="24" FontWeight="Bold" 
                                   Foreground="{StaticResource AccentBrush}"
                                   HorizontalAlignment="Center"
                                   Margin="0,10,0,20"/>
                        
                        <Border Background="#252536" CornerRadius="5" Padding="15" Margin="5,0,5,15">
                            <StackPanel>
                                <TextBlock Text="Getting Started" 
                                           FontSize="18" FontWeight="Bold" 
                                           Foreground="{StaticResource TextBrush}"
                                           Margin="0,0,0,10"/>
                                
                                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                           Foreground="{StaticResource TextBrush}">
                                    <Run FontWeight="Bold">1.</Run> Click the <Run FontWeight="Bold">Load Data</Run> button to import historical sales data
                                    <LineBreak/>
                                    <Run FontWeight="Bold">2.</Run> Set the <Run FontWeight="Bold">Lead Time</Run> and <Run FontWeight="Bold">Reorder Threshold</Run> parameters
                                    <LineBreak/>
                                    <Run FontWeight="Bold">3.</Run> Select a forecasting model (SSA or LSTM Deep Learning)
                                    <LineBreak/>
                                    <Run FontWeight="Bold">4.</Run> Click <Run FontWeight="Bold">Run Forecast</Run> to generate predictions and recommendations
                                </TextBlock>
                            </StackPanel>
                        </Border>
                        
                        <Border Background="#252536" CornerRadius="5" Padding="15" Margin="5,0,5,15">
                            <StackPanel>
                                <TextBlock Text="Deep Learning in Supply Chain" 
                                           FontSize="18" FontWeight="Bold" 
                                           Foreground="{StaticResource TextBrush}"
                                           Margin="0,0,0,10"/>
                                
                                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                           Foreground="{StaticResource TextBrush}">
                                    This system uses Long Short-Term Memory (LSTM) neural networks to provide accurate demand forecasting. 
                                    LSTM networks are particularly effective for time series forecasting because they can:
                                    <LineBreak/><LineBreak/>
                                    • Capture long-term dependencies in data
                                    <LineBreak/>
                                    • Learn complex patterns that traditional methods might miss
                                    <LineBreak/>
                                    • Incorporate multiple factors affecting demand
                                    <LineBreak/>
                                    • Adapt to changing market conditions
                                    <LineBreak/><LineBreak/>
                                    The LSTM model is trained on historical sales data and can consider factors such as promotions, 
                                    holidays, and store characteristics to generate more accurate forecasts.
                                </TextBlock>
                            </StackPanel>
                        </Border>
                        
                        <Border Background="#252536" CornerRadius="5" Padding="15" Margin="5,0,5,15">
                            <StackPanel>
                                <TextBlock Text="Key Supply Chain Concepts" 
                                           FontSize="18" FontWeight="Bold" 
                                           Foreground="{StaticResource TextBrush}"
                                           Margin="0,0,0,10"/>
                                
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                        <TextBlock Text="Lead Time" FontWeight="Bold" 
                                                   Foreground="{StaticResource AccentBrush}"/>
                                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                                   Foreground="{StaticResource TextBrush}">
                                            The time between placing an order and receiving it. Longer lead times require higher safety stock.
                                        </TextBlock>
                                        
                                        <TextBlock Text="Safety Stock" FontWeight="Bold" 
                                                   Foreground="{StaticResource AccentBrush}"/>
                                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                                   Foreground="{StaticResource TextBrush}">
                                            Extra inventory kept to prevent stockouts due to demand variability or supply delays.
                                        </TextBlock>
                                    </StackPanel>
                                    
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Reorder Point" FontWeight="Bold" 
                                                   Foreground="{StaticResource AccentBrush}"/>
                                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                                   Foreground="{StaticResource TextBrush}">
                                            The inventory level at which a new order should be placed to avoid stockouts.
                                        </TextBlock>
                                        
                                        <TextBlock Text="Economic Order Quantity (EOQ)" FontWeight="Bold" 
                                                   Foreground="{StaticResource AccentBrush}"/>
                                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10"
                                                   Foreground="{StaticResource TextBrush}">
                                            The optimal order quantity that minimizes total inventory costs.
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            
            <TabItem Header="Forecast Details">
                <DataGrid ItemsSource="{Binding ForecastPoints}" AutoGenerateColumns="False" IsReadOnly="True" 
                          Background="{StaticResource PanelBrush}" Foreground="{StaticResource TextBrush}"
                          GridLinesVisibility="All" HeadersVisibility="All">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Binding="{Binding Period}" Width="80"/>
                        <DataGridTextColumn Header="Forecast" Binding="{Binding ForecastedDemand, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Lower Bound" Binding="{Binding LowerBound, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Upper Bound" Binding="{Binding UpperBound, StringFormat={}{0:F2}}" Width="120"/>
                        <DataGridTextColumn Header="Reorder Point" Binding="{Binding ReorderPoint}" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Header="Inventory Recommendations" Background="#3A3A3A" Foreground="White">
                <DataGrid ItemsSource="{Binding InventoryRecommendations}" AutoGenerateColumns="False" IsReadOnly="True" 
                          Background="{StaticResource PanelBrush}" Foreground="{StaticResource TextBrush}"
                          GridLinesVisibility="All" HeadersVisibility="All">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Store" Binding="{Binding Item}" Width="80"/>
                        <DataGridTextColumn Header="Current Stock" Binding="{Binding CurrentStock}" Width="100"/>
                        <DataGridTextColumn Header="Recommended Order" Binding="{Binding RecommendedOrder}" Width="130"/>
                        <DataGridTextColumn Header="Lead Time Demand" Binding="{Binding LeadTimeDemand, StringFormat=F2}" Width="130"/>
                        <DataGridTextColumn Header="Safety Stock" Binding="{Binding SafetyStock, StringFormat=F2}" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            
            <TabItem Header="Market Analysis" Background="#3A3A3A" Foreground="White">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Text="Economic Indicators" Foreground="{StaticResource TextBrush}" 
                               FontWeight="Medium" Margin="10,5"/>
                    
                    <ListView Grid.Row="1" ItemsSource="{Binding MarketData}" Background="{StaticResource PanelBrush}"
                              Foreground="{StaticResource TextBrush}" BorderBrush="{StaticResource BorderBrush}"
                              BorderThickness="1" Margin="10,0,10,10">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Indicator" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Key}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Change" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Change}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Impact" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Impact}" Foreground="{StaticResource TextBrush}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Impact}" Value="Positive">
                                                                <Setter Property="Foreground" Value="#4CAF50"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Impact}" Value="Negative">
                                                                <Setter Property="Foreground" Value="#F44336"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="Sector Performance" Foreground="{StaticResource TextBrush}" 
                                   FontWeight="Medium" Margin="10,5"/>
                        
                        <Button Grid.Column="1" Content="Refresh Data" 
                                Command="{Binding FetchMarketDataCommand}" 
                                Style="{StaticResource FuturisticButton}" 
                                Margin="5"/>
                    </Grid>
                    
                    <ListView Grid.Row="3" ItemsSource="{Binding SectorPerformance}" Background="{StaticResource PanelBrush}"
                              Foreground="{StaticResource TextBrush}" BorderBrush="{StaticResource BorderBrush}"
                              BorderThickness="1" Margin="10,0,10,10">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Sector" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Symbol}" Foreground="{StaticResource TextBrush}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Performance" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Change}" Foreground="{StaticResource TextBrush}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Change}" Value="Positive">
                                                                <Setter Property="Foreground" Value="#4CAF50"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Change}" Value="Negative">
                                                                <Setter Property="Foreground" Value="#F44336"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
            
            <TabItem Header="Settings" Background="#3A3A3A" Foreground="White">
                <ui:SettingsControl Margin="0,10,0,0"/>
            </TabItem>
        </TabControl>
        
        <!-- FOOTER -->
        <Border Grid.Row="4" Background="{StaticResource PanelBrush}" Margin="10" CornerRadius="5">
            <TextBlock Text="Supply Chain Optimization System - Powered by Deep Learning" 
                       Foreground="{StaticResource TextBrush}" 
                       HorizontalAlignment="Center" 
                       Margin="10,5"/>
        </Border>
    </Grid>
</Window>